
#=================================================================================================================================
# $ gmic -m custom.gmic -generate_CLUT keypoints.png,uniformSampling
generate_CLUT :
v + 
resolution=64
resolution1={$resolution-1} 
$resolution,$resolution,$resolution,4 

uniformSampling=$2 # choice{0,"None","8 Keypoints (RGB Corners)","27 Keypoints","64 Keypoints","125 Keypoints","216 Keypoints","343 Keypoints"},
if $uniformSampling # Lock uniform sampling
  uniform_distribution {(1+$uniformSampling)^3},3 
  repeat 
  w point.. {round($resolution1*I[$>])},1,{255*I[$>]},1 
  done 
  rm.
fi

-input $1 # Add user-defined color correspondences
s. x 
-rotate[-1,-2] -90
nb_keypoints={w} 
repeat $nb_keypoints
  mode=2 # choice{"ignore","lock", "replace"} TODO: extend the script to take "mode" from the 3th column of the user-defined color correspondences img 
  if $mode # if not ignore (lock or replace)
    tRGB=[{I[$>]}]
    echo {$tRGB}
    mv[-1] 0
    sRGB=[{I[$>]}]
    echo {$sRGB}
    xyz={round(($resolution1/255)*$sRGB)}

    if $mode==2 pixel_RGB=$tRGB else pixel_RGB=$sRGB fi
     
    mv[-1] 0
    point. $xyz,1,{$pixel_RGB},1 
    mv[-1] 0
    
  fi
done

rm[-2,-1]
keypoint_influence=100
s c,-3

# create a weighting map image and move it to [0]
if $keypoint_influence<100 # Need to compute a weighting map.
  +distance. 1
  if $keypoint_influence ^. {1/(0.05+4*$keypoint_influence%)} else f. 0 fi
  n. 0,1 nm. influence mv. -3
fi

==. 0 # generate the mask (all pixels so no mask!)
inpaint_pde.. .,100%,1,20 
rm. # remove the mask

if $keypoint_influence<100 # using "if {$influence}" instead is buggy!
  100%,100%,100%,3,[x,y,z] n. 0,255
  j. ..,0,0,0,0,1,...
  -d
  rm[-3,-2]
fi

c. 0,255 

# save it as .cube
-o. lut_uniformSampling$uniformSampling.cube

# Apply CLUT
-input $1
s. x
map_clut.. [0] # w/o spatial regularization
-d v - # if all went well, then last 2 images should be almost identical!

rm[-2,-1]
#convert to Haldclut png    
-r 64,64,64,3,3 -r 512,512,1,3,-1 -o lut_uniformSampling$uniformSampling.png

#visualize the cube
distribution3d colorcube3d primitives3d 1 add3d

#=================================================================================================================================
# $ gmic -m custom.gmic -generate_CLUT_beforeAfter src.tif,dst.tif,out_folder,clut_name,keypoints_influence
# e.g. gmic -m ../../custom.gmic clut_from_ab fromRawCon_off8bit_beforeCA_3_color_corrected_Humphrey.tif,Humphrey_reference_fromRawCon_off8bit_beforeCA_+3.tif,./,test.png,100

clut_from_ab :
v + 
-input $1
-input $2
-fx_clut_from_ab 2,4,$3,$4,$5
-input $3/$4 mv[-1] 0
map_clut[-1] [0] # Apply CLUT
-d v - # if all went well, then last 2 images should be almost identical!
rm[^0]
distribution3d colorcube3d primitives3d 1 add3d
v -